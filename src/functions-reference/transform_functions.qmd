---
pagetitle: Variable Transformation Functions
---

# Variable Transformation Functions

These functions provide direct access to the ability to
constrain and unconstrain variables using the built-in transformations
as defined in the [Stan Reference Manual](https://mc-stan.org/docs/reference-manual/transforms.html).

For each of the built-in variable transforms, there are 3 functions exposed. A
`_constrain` function that maps from free variables to constrained variables (the "inverse transform"),
a `_unconstrain` function that maps from the constrained space back to free variables (the "transform"),
and a [`_jacobian` function](https://mc-stan.org/docs/reference-manual/statements.html#increment-log-density-with-a-change-of-variables-adjustment),
which computes the same value as the `_constrain` function while also
incrementing the target with the relevant change of variables adjustment.

For this page, variables named `y` are unconstrained, while variables named `x`
are in the constrained space. The unconstraining functions will cause rejections
if their input is not properly in the constrained space.

## Transforms for scalars

Note: It is possible to use these transforms with arrays and other containers like `vector`s.
This results in elementwise application of the transform.

### Lower bounds

<!-- reals; lower_bound_constrain; (reals y, reals l); -->
\index{{\tt \bfseries lower\_bound\_constrain }!{\tt (reals y, reals l): reals}|hyperpage}

`reals` **`lower_bound_constrain`**`(reals y, reals l)`<br>\newline

{{< since 2.37 >}}

<!-- reals; lower_bound_jacobian; (reals y, reals l); -->
\index{{\tt \bfseries lower\_bound\_jacobian }!{\tt (reals y, reals l): reals}|hyperpage}

`reals` **`lower_bound_jacobian`**`(reals y, reals l)`<br>\newline

{{< since 2.37 >}}

<!-- reals; lower_bound_unconstrain; (reals x, reals l); -->
\index{{\tt \bfseries lower\_bound\_unconstrain }!{\tt (reals x, reals l): reals}|hyperpage}

`reals` **`lower_bound_unconstrain`**`(reals x, reals l)`<br>\newline

{{< since 2.37 >}}

### Upper Bounds

<!-- reals; upper_bound_constrain; (reals y, reals u); -->
\index{{\tt \bfseries upper\_bound\_constrain }!{\tt (reals y, reals u): reals}|hyperpage}

`reals` **`upper_bound_constrain`**`(reals y, reals u)`<br>\newline

{{< since 2.37 >}}

<!-- reals; upper_bound_jacobian; (reals x, reals u); -->
\index{{\tt \bfseries upper\_bound\_jacobian }!{\tt (reals x, reals u): reals}|hyperpage}

`reals` **`upper_bound_jacobian`**`(reals x, reals u)`<br>\newline

{{< since 2.37 >}}

<!-- reals; upper_bound_unconstrain; (reals x, reals u); -->
\index{{\tt \bfseries upper\_bound\_unconstrain }!{\tt (reals x, reals u): reals}|hyperpage}

`reals` **`upper_bound_unconstrain`**`(reals x, reals u)`<br>\newline

{{< since 2.37 >}}

### Upper and lower bounds

<!-- reals; lower_upper_bound_constrain; (reals y, reals l, reals u); -->
\index{{\tt \bfseries lower\_upper\_bound\_constrain }!{\tt (reals y, reals l, reals u): reals}|hyperpage}

`reals` **`lower_upper_bound_constrain`**`(reals y, reals l, reals u)`<br>\newline

{{< since 2.37 >}}

<!-- reals; lower_upper_bound_jacobian; (reals y, reals l, reals u); -->
\index{{\tt \bfseries lower\_upper\_bound\_jacobian }!{\tt (reals y, reals l, reals u): reals}|hyperpage}

`reals` **`lower_upper_bound_jacobian`**`(reals y, reals l, reals u)`<br>\newline

{{< since 2.37 >}}
<!-- reals; lower_upper_bound_unconstrain; (reals x, reals l, reals y); -->
\index{{\tt \bfseries lower\_upper\_bound\_unconstrain }!{\tt (reals x, reals l, reals y): reals}|hyperpage}

`reals` **`lower_upper_bound_unconstrain`**`(reals x, reals l, reals y)`<br>\newline

{{< since 2.37 >}}

### Affine transforms

<!-- reals; offset_multiplier_constrain; (reals y, reals offset, reals mult); -->
\index{{\tt \bfseries offset\_multiplier\_constrain }!{\tt (reals y, reals offset, reals mult): reals}|hyperpage}

`reals` **`offset_multiplier_constrain`**`(reals y, reals offset, reals mult)`<br>\newline

{{< since 2.37 >}}

<!-- reals; offset_multiplier_jacobian; (reals y, reals offset, reals mult); -->
\index{{\tt \bfseries offset\_multiplier\_jacobian }!{\tt (reals y, reals offset, reals mult): reals}|hyperpage}

`reals` **`offset_multiplier_jacobian`**`(reals y, reals offset, reals mult)`<br>\newline

{{< since 2.37 >}}

<!-- reals; offset_multiplier_unconstrain; (reals x, reals offset, reals mult); -->
\index{{\tt \bfseries offset\_multiplier\_unconstrain }!{\tt (reals x, reals offset, reals mult): reals}|hyperpage}

`reals` **`offset_multiplier_unconstrain`**`(reals x, reals offset, reals mult)`<br>\newline

{{< since 2.37 >}}

## Transforms for constrained vectors

These functions constrain entire vectors. Note that
this ocassionally leads to a change in length, which will be
noted in the documentation for the relevant functions.

Where `vectors` is used, this indicates that either a `vector`
or a (possibly multidimensional) array of `vector`s may be
provided. The array will be processed element by element.

### Ordered vectors

<!-- vectors; ordered_constrain; (vectors y); -->
\index{{\tt \bfseries ordered\_constrain }!{\tt (vectors y): vectors}|hyperpage}

`vectors` **`ordered_constrain`**`(vectors y)`<br>\newline

{{< since 2.37 >}}

<!-- vectors; ordered_jacobian; (vectors y); -->
\index{{\tt \bfseries ordered\_jacobian }!{\tt (vectors y): vectors}|hyperpage}

`vectors` **`ordered_jacobian`**`(vectors y)`<br>\newline

{{< since 2.37 >}}

<!-- vectors; ordered_unconstrain; (vectors x); -->
\index{{\tt \bfseries ordered\_unconstrain }!{\tt (vectors x): vectors}|hyperpage}

`vectors` **`ordered_unconstrain`**`(vectors x)`<br>\newline

{{< since 2.37 >}}

### Positive order vectors

<!-- vectors; positive_ordered_constrain; (vectors y); -->
\index{{\tt \bfseries positive\_ordered\_constrain }!{\tt (vectors y): vectors}|hyperpage}

`vectors` **`positive_ordered_constrain`**`(vectors y)`<br>\newline

{{< since 2.37 >}}

<!-- vectors; positive_ordered_jacobian; (vectors y); -->
\index{{\tt \bfseries positive\_ordered\_jacobian }!{\tt (vectors y): vectors}|hyperpage}

`vectors` **`positive_ordered_jacobian`**`(vectors y)`<br>\newline

{{< since 2.37 >}}

<!-- vectors; positive_ordered_unconstrain; (vectors x); -->
\index{{\tt \bfseries positive\_ordered\_unconstrain }!{\tt (vectors x): vectors}|hyperpage}

`vectors` **`positive_ordered_unconstrain`**`(vectors x)`<br>\newline

{{< since 2.37 >}}

### Simplices

<!-- vector; simplex_constrain; (vector y); -->
\index{{\tt \bfseries simplex\_constrain }!{\tt (vector y): vector}|hyperpage}

`vector` **`simplex_constrain`**`(vector y)`<br>\newline

{{< since 2.37 >}}

<!-- vector; simplex_jacobian; (vector y); -->
\index{{\tt \bfseries simplex\_jacobian }!{\tt (vector y): vector}|hyperpage}

`vector` **`simplex_jacobian`**`(vector y)`<br>\newline

{{< since 2.37 >}}

<!-- vector; simplex_unconstrain; (vector x); -->
\index{{\tt \bfseries simplex\_unconstrain }!{\tt (vector x): vector}|hyperpage}

`vector` **`simplex_unconstrain`**`(vector x)`<br>\newline

{{< since 2.37 >}}

### Zero-sum vectors

<!-- vectors; sum_to_zero_constrain; (vectors y); -->
\index{{\tt \bfseries sum\_to\_zero\_constrain }!{\tt (vectors y): vectors}|hyperpage}

`vectors` **`sum_to_zero_constrain`**`(vectors y)`<br>\newline

{{< since 2.37 >}}

<!-- vectors; sum_to_zero_jacobian; (vectors y); -->
\index{{\tt \bfseries sum\_to\_zero\_jacobian }!{\tt (vectors y): vectors}|hyperpage}

`vectors` **`sum_to_zero_jacobian`**`(vectors y)`<br>\newline

{{< since 2.37 >}}

<!-- vectors; sum_to_zero_unconstrain; (vectors x); -->
\index{{\tt \bfseries sum\_to\_zero\_unconstrain }!{\tt (vectors x): vectors}|hyperpage}

`vectors` **`sum_to_zero_unconstrain`**`(vectors x)`<br>\newline

{{< since 2.37 >}}

### Unit vectors

<!-- vectors; unit_vectors_constrain; (vectors y); -->
\index{{\tt \bfseries unit\_vectors\_constrain }!{\tt (vectors y): vectors}|hyperpage}

`vectors` **`unit_vectors_constrain`**`(vectors y)`<br>\newline

{{< since 2.37 >}}

<!-- vectors; unit_vectors_jacobian; (vectors y); -->
\index{{\tt \bfseries unit\_vectors\_jacobian }!{\tt (vectors y): vectors}|hyperpage}

`vectors` **`unit_vectors_jacobian`**`(vectors y)`<br>\newline

{{< since 2.37 >}}

<!-- vectors; unit_vectors_unconstrain; (vectors x); -->
\index{{\tt \bfseries unit\_vectors\_unconstrain }!{\tt (vectors x): vectors}|hyperpage}

`vectors` **`unit_vectors_unconstrain`**`(vectors x)`<br>\newline

{{< since 2.37 >}}

## Transforms for constrained matrices

Similarly to the above, `vectors` means a `vector` or array thereof,
and `matrices` means a `matrix` or array thereof.

### Cholesky factors of correlation matrices

<!-- matrices; cholesky_factor_corr_constrain; (vectors y, int K); -->
\index{{\tt \bfseries cholesky\_factor\_corr\_constrain }!{\tt (vectors y, int K): matrices}|hyperpage}

`matrices` **`cholesky_factor_corr_constrain`**`(vectors y, int K)`<br>\newline

{{< since 2.37 >}}

<!-- matrices; cholesky_factor_corr_jacobian; (vectors y, int K); -->
\index{{\tt \bfseries cholesky\_factor\_corr\_jacobian }!{\tt (vectors y, int K): matrices}|hyperpage}

`matrices` **`cholesky_factor_corr_jacobian`**`(vectors y, int K)`<br>\newline

{{< since 2.37 >}}

<!-- vectors; cholesky_factor_corr_unconstrain; (matrices x); -->
\index{{\tt \bfseries cholesky\_factor\_corr\_unconstrain }!{\tt (matrices x): vectors}|hyperpage}

`vectors` **`cholesky_factor_corr_unconstrain`**`(matrices x)`<br>\newline

{{< since 2.37 >}}

### Cholesky factors of covariance matrices

<!-- matrices; cholesky_factor_cov_constrain; (vectors y, int N, int M); -->
\index{{\tt \bfseries cholesky\_factor\_cov\_constrain }!{\tt (vectors y, int N, int M): matrices}|hyperpage}

`matrices` **`cholesky_factor_cov_constrain`**`(vectors y, int N, int M)`<br>\newline

{{< since 2.37 >}}

<!-- matrices; cholesky_factor_cov_jacobian; (vectors y, int N, int M); -->
\index{{\tt \bfseries cholesky\_factor\_cov\_jacobian }!{\tt (vectors y, int N, int M): matrices}|hyperpage}

`matrices` **`cholesky_factor_cov_jacobian`**`(vectors y, int N, int M)`<br>\newline

{{< since 2.37 >}}

<!-- vectors; cholesky_factor_cov_unconstrain; (matrices x); -->
\index{{\tt \bfseries cholesky\_factor\_cov\_unconstrain }!{\tt (matrices x): vectors}|hyperpage}

`vectors` **`cholesky_factor_cov_unconstrain`**`(matrices x)`<br>\newline

{{< since 2.37 >}}

### Correlation matrices

<!-- matrices; corr_matrix_constrain; (vectors y, int K); -->
\index{{\tt \bfseries corr\_matrix\_constrain }!{\tt (vectors y, int K): matrices}|hyperpage}

`matrices` **`corr_matrix_constrain`**`(vectors y, int K)`<br>\newline

{{< since 2.37 >}}

<!-- matrices; corr_matrix_jacobian; (vectors y, int K); -->
\index{{\tt \bfseries corr\_matrix\_jacobian }!{\tt (vectors y, int K): matrices}|hyperpage}

`matrices` **`corr_matrix_jacobian`**`(vectors y, int K)`<br>\newline

{{< since 2.37 >}}

<!-- vectors; corr_matrix_unconstrain; (matrices x); -->
\index{{\tt \bfseries corr\_matrix\_unconstrain }!{\tt (matrices x): vectors}|hyperpage}

`vectors` **`corr_matrix_unconstrain`**`(matrices x)`<br>\newline

{{< since 2.37 >}}

### Covariance matrices

<!-- matrices; cov_matrix_constrain; (vectors y, int K); -->
\index{{\tt \bfseries cov\_matrix\_constrain }!{\tt (vectors y, int K): matrices}|hyperpage}

`matrices` **`cov_matrix_constrain`**`(vectors y, int K)`<br>\newline

{{< since 2.37 >}}

<!-- matrices; cov_matrix_jacobian; (vectors y, int K); -->
\index{{\tt \bfseries cov\_matrix\_jacobian }!{\tt (vectors y, int K): matrices}|hyperpage}

`matrices` **`cov_matrix_jacobian`**`(vectors y, int K)`<br>\newline

{{< since 2.37 >}}

<!-- vectors; cov_matrix_unconstrain; (matrices x); -->
\index{{\tt \bfseries cov\_matrix\_unconstrain }!{\tt (matrices x): vectors}|hyperpage}

`vectors` **`cov_matrix_unconstrain`**`(matrices x)`<br>\newline

{{< since 2.37 >}}

### Column-stochastic matrices

<!-- matrices; stochastic_column_constrain; (matrices y); -->
\index{{\tt \bfseries stochastic\_column\_constrain }!{\tt (matrices y): matrices}|hyperpage}

`matrices` **`stochastic_column_constrain`**`(matrices y)`<br>\newline

{{< since 2.37 >}}

<!-- matrices; stochastic_column_jacobian; (matrices y); -->
\index{{\tt \bfseries stochastic\_column\_jacobian }!{\tt (matrices y): matrices}|hyperpage}

`matrices` **`stochastic_column_jacobian`**`(matrices y)`<br>\newline

{{< since 2.37 >}}

<!-- matrices; stochastic_column_unconstrain; (matrices x); -->
\index{{\tt \bfseries stochastic\_column\_unconstrain }!{\tt (matrices x): matrices}|hyperpage}

`matrices` **`stochastic_column_unconstrain`**`(matrices x)`<br>\newline

{{< since 2.37 >}}

### Row-stochastic matrices

<!-- matrices; stochastic_row_constrain; (matrices y); -->
\index{{\tt \bfseries stochastic\_row\_constrain }!{\tt (matrices y): matrices}|hyperpage}

`matrices` **`stochastic_row_constrain`**`(matrices y)`<br>\newline

{{< since 2.37 >}}

<!-- matrices; stochastic_row_jacobian; (matrices y); -->
\index{{\tt \bfseries stochastic\_row\_jacobian }!{\tt (matrices y): matrices}|hyperpage}

`matrices` **`stochastic_row_jacobian`**`(matrices y)`<br>\newline

{{< since 2.37 >}}

<!-- matrices; stochastic_row_unconstrain; (matrices x); -->
\index{{\tt \bfseries stochastic\_row\_unconstrain }!{\tt (matrices x): matrices}|hyperpage}

`matrices` **`stochastic_row_unconstrain`**`(matrices x)`<br>\newline

{{< since 2.37 >}}
